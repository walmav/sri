// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spiffe/spire/pkg/agent/cache (interfaces: Cache)

package mock_cache

import (
	gomock "github.com/golang/mock/gomock"
	cache "github.com/spiffe/spire/pkg/agent/cache"
	common "github.com/spiffe/spire/proto/common"
	reflect "reflect"
)

// MockCache is a mock of Cache interface
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *MockCacheMockRecorder
}

// MockCacheMockRecorder is the mock recorder for MockCache
type MockCacheMockRecorder struct {
	mock *MockCache
}

// NewMockCache creates a new mock instance
func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &MockCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCache) EXPECT() *MockCacheMockRecorder {
	return _m.recorder
}

// DeleteEntry mocks base method
func (_m *MockCache) DeleteEntry(_param0 []*common.Selector) bool {
	ret := _m.ctrl.Call(_m, "DeleteEntry", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// DeleteEntry indicates an expected call of DeleteEntry
func (_mr *MockCacheMockRecorder) DeleteEntry(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "DeleteEntry", reflect.TypeOf((*MockCache)(nil).DeleteEntry), arg0)
}

// Entry mocks base method
func (_m *MockCache) Entry(_param0 []*common.Selector) []cache.CacheEntry {
	ret := _m.ctrl.Call(_m, "Entry", _param0)
	ret0, _ := ret[0].([]cache.CacheEntry)
	return ret0
}

// Entry indicates an expected call of Entry
func (_mr *MockCacheMockRecorder) Entry(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Entry", reflect.TypeOf((*MockCache)(nil).Entry), arg0)
}

// GetEntries mocks base method
func (_m *MockCache) GetEntries() map[string][]cache.CacheEntry {
	ret := _m.ctrl.Call(_m, "GetEntries")
	ret0, _ := ret[0].(map[string][]cache.CacheEntry)
	return ret0
}

// GetEntries indicates an expected call of GetEntries
func (_mr *MockCacheMockRecorder) GetEntries() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetEntries", reflect.TypeOf((*MockCache)(nil).GetEntries))
}

// SetEntry mocks base method
func (_m *MockCache) SetEntry(_param0 cache.CacheEntry) {
	_m.ctrl.Call(_m, "SetEntry", _param0)
}

// SetEntry indicates an expected call of SetEntry
func (_mr *MockCacheMockRecorder) SetEntry(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SetEntry", reflect.TypeOf((*MockCache)(nil).SetEntry), arg0)
}
